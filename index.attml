<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>순천시 의료기관 현황 인포그래픽</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* Inter 폰트 적용 및 부드러운 전환 효과를 위한 기본 스타일 */
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700;800&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            transition: background-color 0.3s ease;
        }
    </style>
</head>
<body class="bg-zinc-900 text-zinc-100 flex items-center justify-center min-h-screen p-4">
    <div class="max-w-xl w-full mx-auto p-8 md:p-12 bg-zinc-800 rounded-2xl shadow-2xl border border-zinc-700">
        <!-- 타이틀 및 설명 부분 -->
        <h1 class="text-3xl md:text-4xl font-extrabold text-center mb-4 text-white">
            <span class="block text-xl font-bold text-zinc-400 mb-1">DATA INSIGHT</span>
            순천시 의료기관 현황
        </h1>
        <p class="text-center text-zinc-400 mb-8 max-w-sm mx-auto">
            제공된 데이터에 기반한 순천시의 의료기관(병원, 의원, 한의원, 치과의원) 종류별 분포를 파이 차트로 시각화했습니다.
        </p>
        
        <!-- 차트 컨테이너 -->
        <div class="chart-container mb-12">
            <canvas id="medicalChart"></canvas>
        </div>

        <!-- 새로운 섹션: 국립의대 설립의 필요성 -->
        <div class="bg-zinc-700 p-6 rounded-xl shadow-inner border border-zinc-600">
            <h2 class="text-2xl font-bold text-white mb-4 border-b border-zinc-500 pb-2">
                국립의대 설립의 필요성 분석
            </h2>
            <div class="space-y-4 text-zinc-300">
                <p>
                    인포그래픽으로 본 순천시의 의료기관 분포 현황은 지역 의료 서비스의 중요성을 다시 한번 강조합니다. 이와 관련하여, 우리 지역사회의 최우선 과제 중 하나인 국립의대 설립의 필요성을 분석해 보았습니다.
                </p>
                <ul class="list-disc list-inside space-y-2">
                    <li>
                        <strong>지역 의료 불균형 해소:</strong> 현재 수도권에 집중된 의료 인력을 분산시켜, 지역민들이 양질의 의료 서비스를 받을 수 있도록 합니다. 이는 응급 및 중증 환자 치료 접근성을 높이는 데 기여합니다.
                    </li>
                    <li>
                        <strong>필수 의료 분야 강화:</strong> 지역 의과대학은 외과, 소아청소년과 등 기피 현상이 심화되는 필수 의료 분야 전문의를 양성하여, 지역 의료 시스템의 근간을 튼튼하게 만듭니다.
                    </li>
                    <li>
                        <strong>지역 인재 육성 및 유출 방지:</strong> 지역 출신 학생들이 지역사회에 봉사할 수 있는 기회를 제공함으로써, 의사들이 졸업 후에도 해당 지역에 정착할 가능성을 높입니다.
                    </li>
                    <li>
                        <strong>지역 경제 활성화:</strong> 의과대학 및 부속 병원 설립은 고용 창출, 관련 산업 발전, 그리고 인구 유입을 촉진하여 지역 경제에 긍정적인 파급 효과를 가져올 수 있습니다.
                    </li>
                </ul>
                <p>
                    결론적으로, 국립의대 설립은 단순한 교육기관 확충을 넘어, 지역사회의 건강과 지속 가능한 발전을 위한 핵심적인 인프라 구축의 의미를 가집니다.
                </p>
            </div>
        </div>
    </div>

    <script>
        // CSV 데이터는 파일 경로 대신 직접 변수에 담아 사용합니다.
        const csvData = `구분,의료기관명,의료기관주소(도로명),의료기관전화번호
한의원,담뜰한의원,"전라남도 순천시 왕지로 36, 2층 203호 (왕지동)",061-762-7577
한의원,하얀미한의원,"전라남도 순천시 왕지4길 9-12, 2층 (왕지동)",
한의원,송인한의원,"전라남도 순천시 중앙로 75, 1층 (저전동)",061-753-2735
한의원,홍대영한의원,"전라남도 순천시 중앙로 146-1, 1층 (매곡동)",061-751-1075
한의원,지리산쌍계한의원,"전라남도 순천시 왕지2길 13-7, 2층 (왕지동)",061-721-0012
한의원,아이누리한의원,"전라남도 순천시 해룡면 매안로 145, 2층 202호",061-723-0275
한의원,산들한의원,"전라남도 순천시 삼산로 101, 2층 203호 (용당동, 주상복합)",061-753-3701
한의원,웃장부부한의원,"전라남도 순천시 중앙로 142, 2층 (매곡동)",061-752-0988
의원,현대외과의원,"전라남도 순천시 조례못등길 1, 현대프라자 3층 301호 (조례동)",061-724-9500
치과의원,새이화치과의원,"전라남도 순천시 팔마1길 22, 2층 (연향동)",061-723-0975
치과의원,수치과의원,"전라남도 순천시 중앙로 235, 2층 (가곡동)",061-753-2875
치과의원,조례탑치과의원,"전라남도 순천시 연향동 1530-10",061-727-2875
치과의원,이사랑치과의원,"전라남도 순천시 해룡면 장선배기길 272, 부영6차가동 2층 3,4호",061-725-2804
치과의원,프롬치과의원,"전라남도 순천시 왕궁길 47, 2층 (조례동)",061-725-2775
치과의원,순천수치과의원,"전라남도 순천시 중앙로 353, 2층 (가곡동)",061-752-6511
치과의원,박석환치과의원,"전라남도 순천시 해룡면 장선배기길 284, 청솔@상가동 201호",061-725-2882
치과의원,라임치과의원,"전라남도 순천시 이수로 321, 4층 (조례동)",061-721-2804
치과의원,스마일치과의원,"전라남도 순천시 해룡면 기적의도서관길 90, 2층 212호 (부영3차아파트)",061-724-2828
치과의원,누가치과의원,전라남도 순천시 중앙로 74 (장천동),061-744-9972
병원,순천한국병원,"전라남도 순천시 구암길 2 (연향동)",061-744-2875
`;
        
        /**
         * Parses CSV data string into an array of objects.
         * Handles quoted fields and newlines correctly.
         * @param {string} csvString The raw CSV data.
         * @returns {Array<Object>} An array of objects representing the data.
         */
        function parseCSV(csvString) {
            const lines = csvString.trim().split('\n');
            const headers = lines[0].split(',').map(header => header.trim());
            const data = [];
            for (let i = 1; i < lines.length; i++) {
                const row = lines[i];
                if (row.trim() === '') continue;

                // Use a simple regex to handle quoted commas correctly
                const regex = /(".*?"|[^",\s]+)(?=\s*|$)|\s*,\s*/g;
                let match;
                let values = [];
                while (match = regex.exec(row)) {
                    // Ignore comma matches
                    if (match[0].trim() === ',') continue;
                    let value = match[0].replace(/^"|"$/g, '').trim(); // Remove leading/trailing quotes
                    values.push(value);
                }

                if (values.length === headers.length) {
                    let obj = {};
                    for (let j = 0; j < headers.length; j++) {
                        obj[headers[j]] = values[j];
                    }
                    data.push(obj);
                }
            }
            return data;
        }

        window.onload = function() {
            try {
                // CSV 데이터 파싱
                const parsedData = parseCSV(csvData);

                // 카테고리별로 데이터 집계
                const categoryCounts = parsedData.reduce((acc, row) => {
                    const category = row['구분'];
                    if (category) {
                        acc[category] = (acc[category] || 0) + 1;
                    }
                    return acc;
                }, {});

                // 차트 라벨 및 데이터 준비
                const labels = Object.keys(categoryCounts);
                const dataPoints = Object.values(categoryCounts);

                // 고급스러운 차트 색상 팔레트
                const backgroundColors = [
                    '#4ade80', // green-400
                    '#f87171', // red-400
                    '#60a5fa', // blue-400
                    '#fbbf24', // amber-400
                ];
                
                // Chart.js 데이터 객체 생성
                const chartData = {
                    labels: labels,
                    datasets: [{
                        label: '의료기관 수',
                        data: dataPoints,
                        backgroundColor: backgroundColors,
                        borderWidth: 0, // 경계선 제거
                        hoverOffset: 16, // 호버 시 간격
                    }]
                };

                // 차트 설정
                const config = {
                    type: 'pie',
                    data: chartData,
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'right', // 범례를 오른쪽에 배치
                                labels: {
                                    color: '#d4d4d8', // 글자 색상 변경
                                    font: {
                                        size: 14
                                    },
                                    boxWidth: 20
                                }
                            },
                            tooltip: {
                                backgroundColor: 'rgba(255, 255, 255, 0.9)', // 툴팁 배경색 변경
                                titleColor: '#18181b', // 툴팁 타이틀 색상
                                bodyColor: '#18181b', // 툴팁 바디 색상
                                borderColor: '#d4d4d8',
                                borderWidth: 1,
                                borderRadius: 8,
                                displayColors: true,
                                callbacks: {
                                    label: function(context) {
                                        const label = context.label || '';
                                        const value = context.parsed || 0;
                                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                        const percentage = ((value / total) * 100).toFixed(1);
                                        return `${label}: ${value}개 (${percentage}%)`;
                                    }
                                }
                            }
                        }
                    }
                };

                // 캔버스에 차트 렌더링
                const ctx = document.getElementById('medicalChart').getContext('2d');
                new Chart(ctx, config);

            } catch (error) {
                console.error("데이터를 처리하거나 차트를 렌더링하는 중 오류가 발생했습니다:", error);
                const errorMessage = document.createElement('p');
                errorMessage.textContent = '데이터 처리 중 오류가 발생했습니다. 개발자 콘솔을 확인해주세요.';
                errorMessage.className = 'text-center text-red-500 mt-4';
                document.querySelector('.container').appendChild(errorMessage);
            }
        };
    </script>
</body>
</html>
